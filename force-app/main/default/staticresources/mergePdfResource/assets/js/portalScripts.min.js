"use strict";console.log("JS Loaded");const PDF_MIME_TYPE="application/pdf";let selectedDocumentsList=[];const removeDom=(e,t,a=0)=>{e&&t&&e.removeChild(t)},addDom=(e,t)=>{e&&t&&e.appendChild(t)},removeSearchResultDropdown=()=>{var e=document.querySelector(".pdf-search"),t=document.querySelector(".searched-items-conatiner");removeDom(e,t)},genSerchedItemDom=(e=!1,t=null)=>{let a="";if(e)a='<span class="fa fa-spinner search-loader"><span>';else if(t&&0<t.length)for(let e=0;e<t.length;e++)a=`${a}<span class="searched-item" id="${t[e].Id}">${t[e].Name}</span>`;else a='<div class="blank">No matching document found<div>';return document.createRange().createContextualFragment(`
          <div class="searched-items-conatiner">
            <div class="searched-items-content">
              ${a}
            </div>
          </div>
        `)},showHideSearchResult=(e=!1,t=null)=>{var a=document.querySelector(".pdf-search"),e=(removeSearchResultDropdown(),e?genSerchedItemDom(!0):genSerchedItemDom(!1,t));addDom(a,e)},searchInputHandler=e=>{showHideSearchResult(!0,null),e.target.value?PdfMergingHandler.searchPdfFile(e.target.value,(e,t)=>{t.status?showHideSearchResult(!1,e):showHideSearchResult()}):showHideSearchResult()},clearDocViewSection=e=>{var t=document.getElementById("mergedPdf"),a=document.querySelector(".pdf-view-container .download-btn"),c=document.querySelector(".pdf-container .btn");e&&0<e.length&&t.src&&a&&c?mergePdf(e):(a.remove(),c.remove(),t.src="")},deleteDocFromList=t=>{var e=selectedDocumentsList.filter(e=>e.id!==t);selectedDocumentsList=[...e],showSelectedDocList(selectedDocumentsList),clearDocViewSection(selectedDocumentsList)},showSelectedDocList=t=>{let a="";var e,c=document.querySelector(".selected-pdf-list"),n=document.querySelector(".pdf-list");if(t&&0<t.length){for(let e=0;e<t.length;e++)a=`${a}
                        <div class="pdf-item">
                          <div class="pdf-details">
                              <i class="fa fa-file-pdf-o"></i>
                              <span>${t[e].name}</span>
                          </div>
                          <div class="pdf-item-btns">
                              <div class="icon-btn cross-btn">
                                  <i class="fa fa-times" id="${t[e].id}"></i>
                              </div>
                          </div>
                        </div>`;a=`<div class="list-container">${a}</div>`}else a='<div class="blank">No document added yet</div>';e=document.createRange().createContextualFragment(`<div class="pdf-list">${a}</div>`),removeDom(c,n),addDom(c,e)},selectDocumentHandler=e=>{e&&PdfMergingHandler.getDocDetails(e,(t,e)=>{e.status&&(selectedDocumentsList.filter(e=>e.id===t.id).length<1&&selectedDocumentsList.push(t),showSelectedDocList(selectedDocumentsList))})},mergePdf=async t=>{let a=[];try{if(t&&t.length<1)alert("PLEASE SELECT PDFS FOR MERGING.");else{const m=await PDFLib.PDFDocument.create();for(let e=0;e<t.length;e++){var c=await PDFLib.PDFDocument.load(t[e].body),n=await m.copyPages(c,c.getPageIndices());a=[...a,...n]}a.forEach(e=>m.addPage(e));var e,d,r=await m.save(),s=new Blob([r],{type:PDF_MIME_TYPE}),o=s&&window.URL.createObjectURL(s),l=(document.getElementById("mergedPdf").src=o,document.querySelector(".download-btn")),i=(l?l.href=o:(e=document.createRange().createContextualFragment(`
          <a class="icon-btn download-btn" href="${o}" name="Document" download>
            <i class="fa fa-download"></i>
          </a>
        `),document.querySelector(".pdf-view-container .title").appendChild(e)),document.querySelector(".pdf-container .action-wrapper a"));i?i.href=o:(d=document.createRange().createContextualFragment(`
          <div class="btn btn-secondary">
            <div class="action-wrapper">
              <a class="btn-text" href="${o}" target="_blank">Open in new tab</a>
            </div>
          </div>
        `),document.querySelector(".pdf-container").appendChild(d))}}catch(e){console.log("EXCEPTION: ",e),alert("PDF MERGING FAILED.")}},domInputHandler=e=>{e.target.matches("#serachDoc")&&searchInputHandler(e)},domClickHandler=e=>{e.target.matches("#serachDoc")&&e.target.value?searchInputHandler(e):e.target.matches(".searched-item")?(selectDocumentHandler(e.target.id),removeSearchResultDropdown()):e.target.matches(".pdf-item-btns .cross-btn .fa")?deleteDocFromList(e.target.id):e.target.matches(".pdf-select-container .action-wrapper")||e.target.matches(".pdf-select-container .btn-text")||e.target.matches(".pdf-select-container .action-wrapper .fa")?mergePdf(selectedDocumentsList):e.target.matches(".searched-items-conatiner")||e.target.matches(".searched-items-content")||e.target.matches(".pdf-search .blank")||e.target.matches(".search-loader")||removeSearchResultDropdown()},initHandlers=()=>{document.addEventListener("input",domInputHandler),window.addEventListener("click",domClickHandler)};window.addEventListener("load",e=>{initHandlers()});